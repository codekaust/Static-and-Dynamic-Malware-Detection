import glob
import re
import statistics
import json
import sys
import pickle
import pandas as pd
import numpy as np
from joblib import load, dump
import csv

import feat_extr_stat
import feat_extr_dyn


TEST_FILES = sys.argv[1]


# print(TEST_FILES)

if(TEST_FILES[len(TEST_FILES)-1] == '/'):
    TEST_FILES = TEST_FILES[0:len(TEST_FILES)-1]

# print(TEST_FILES)




STATIC_FILES = glob.glob(TEST_FILES+'/**/Structure_Info.txt', recursive=True)
DYNAMIC_FILES = glob.glob(TEST_FILES+'/**/*.json', recursive=True)

hash_stat = {}
hash_dyn = {}


for file in DYNAMIC_FILES:
    x = (file.split('/')[len(file.split('/'))-1]).split('.')[0]
    hash_dyn[x] = file

for file in STATIC_FILES:
    x = (file.split('/')[len(file.split('/'))-2])
    hash_stat[x] = file




hash_intersec = set(hash_stat.keys()).intersection(hash_dyn.keys())

for hash_ in hash_intersec:
    del hash_stat[hash_]

# Now do what u want on hash_dyn and hash_stat




stat_feats = feat_extr_stat.get_feat_list()
dyn_feats = feat_extr_dyn.get_feat_list()




# print(len(hash_stat))

stat_dics = feat_extr_stat.get_stat_f(hash_stat)

# print(len(stat_dics))




# print(len(hash_dyn))

dyn_dics = feat_extr_dyn.get_dyn_f(hash_dyn)

# print(len(dyn_dics))


# # Convert dict to correct format: 


stat_df = pd.DataFrame(stat_dics, columns = stat_feats).dropna()
dyn_df = pd.DataFrame(dyn_dics, columns = dyn_feats).dropna()


# # Load model, do Inference:

output = []


if len(stat_dics) != 0:
    stat_np = stat_df.to_numpy()
    static_hashes = stat_np[:, 0:1]
    stat_np = stat_np[:, 1:]
    static_scaler = load('static_scaler.joblib')
    stat_x_test = static_scaler.transform(stat_np)
    static_classifier = load('static.joblib')
    static_prediction = static_classifier.predict(stat_x_test)
    static_result = np.concatenate([static_hashes, np.expand_dims(static_prediction, axis=-1)], axis=-1)
    
    
    for each in static_result:
        dic = dict()
        dic['Hash'] = each[0]
        dic['Prediction'] = 'Malware' if each[1]==1 else 'Benign'
        output.append(dic)



if len(dyn_dics) != 0:
    dyn_np = dyn_df.to_numpy()
    dynamic_hashes = dyn_np[:, 0:1]
    dyn_np = dyn_np[:, 1:]
    dynamic_scaler = load('dynamic_scaler.joblib')
    dyn_x_test = dynamic_scaler.transform(dyn_np)
    dynamic_classifier = load('dynamic.joblib')
    dynamic_prediction = dynamic_classifier.predict(dyn_x_test)
    dynamic_result = np.concatenate([dynamic_hashes, np.expand_dims(dynamic_prediction, axis=-1)], axis=-1)
    
    for each in dynamic_result:
        dic = dict()
        dic['Hash'] = each[0]
        dic['Prediction'] = 'Malware' if each[1]==1 else 'Benign'
        output.append(dic)


# # Write CSV: 


with open('./output.csv', 'w') as csvfile: 
    writer = csv.DictWriter(csvfile, fieldnames = ['Hash', 'Prediction']) 
    writer.writeheader()
    writer.writerows(output)